\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{private}\PYG{o}{[}\PYG{k+kt}{this}\PYG{o}{]} \PYG{k}{def} \PYG{n}{sendRequest}\PYG{o}{(}\PYG{n}{req}\PYG{k}{:} \PYG{k+kt}{FetchRequest}\PYG{o}{)} \PYG{o}{\PYGZob{}}
  \PYG{n}{req}\PYG{o}{.}\PYG{n}{blocks}\PYG{o}{.}\PYG{n}{size}\PYG{o}{,} \PYG{n+nc}{Utils}\PYG{o}{.}\PYG{n}{bytesToString}\PYG{o}{(}\PYG{n}{req}\PYG{o}{.}\PYG{n}{size}\PYG{o}{),} \PYG{n}{req}\PYG{o}{.}\PYG{n}{address}\PYG{o}{.}\PYG{n}{hostPort}\PYG{o}{))}
  \PYG{n}{bytesInFlight} \PYG{o}{+=} \PYG{n}{req}\PYG{o}{.}\PYG{n}{size}
  \PYG{c+c1}{//首先获得要fetch的blocks的信息}
  \PYG{k}{val} \PYG{n}{sizeMap} \PYG{k}{=} \PYG{n}{req}\PYG{o}{.}\PYG{n}{blocks}\PYG{o}{.}\PYG{n}{map} \PYG{o}{\PYGZob{}} \PYG{k}{case} \PYG{o}{(}\PYG{n}{blockId}\PYG{o}{,} \PYG{n}{size}\PYG{o}{)} \PYG{k}{=\PYGZgt{}} \PYG{o}{(}\PYG{n}{blockId}\PYG{o}{.}\PYG{n}{toString}\PYG{o}{,} \PYG{n}{size}\PYG{o}{)} \PYG{o}{\PYGZcb{}.}\PYG{n}{toMap}
  \PYG{k}{val} \PYG{n}{blockIds} \PYG{k}{=} \PYG{n}{req}\PYG{o}{.}\PYG{n}{blocks}\PYG{o}{.}\PYG{n}{map}\PYG{o}{(}\PYG{k}{\PYGZus{}}\PYG{o}{.}\PYG{n}{\PYGZus{}1}\PYG{o}{.}\PYG{n}{toString}\PYG{o}{)}
  \PYG{k}{val} \PYG{n}{address} \PYG{k}{=} \PYG{n}{req}\PYG{o}{.}\PYG{n}{address}
  \PYG{c+c1}{// 然后通过shuffleClient的fetchBlocks方法来获取对应远程节点上的数据}
  \PYG{c+c1}{// 默认是通过NettyBlockTransferService的fetchBlocks方法实现的}
  \PYG{n}{shuffleClient}\PYG{o}{.}\PYG{n}{fetchBlocks}\PYG{o}{(}\PYG{n}{address}\PYG{o}{.}\PYG{n}{host}\PYG{o}{,} \PYG{n}{address}\PYG{o}{.}\PYG{n}{port}\PYG{o}{,} \PYG{n}{address}\PYG{o}{.}\PYG{n}{executorId}\PYG{o}{,} \PYG{n}{blockIds}\PYG{o}{.}\PYG{n}{toArray}\PYG{o}{,}
    \PYG{k}{new} \PYG{n+nc}{BlockFetchingListener} \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{// 最后，不管成功还是失败，都将结果保存在results中}
      \PYG{k}{override} \PYG{k}{def} \PYG{n}{onBlockFetchSuccess}\PYG{o}{(}\PYG{n}{blockId}\PYG{k}{:} \PYG{k+kt}{String}\PYG{o}{,} \PYG{n}{buf}\PYG{k}{:} \PYG{k+kt}{ManagedBuffer}\PYG{o}{)}\PYG{k}{:} \PYG{k+kt}{Unit} \PYG{o}{=} \PYG{o}{\PYGZob{}}\PYG{c+c1}{//请求成功}
        \PYG{k}{if} \PYG{o}{(!}\PYG{n}{isZombie}\PYG{o}{)} \PYG{o}{\PYGZob{}}
          \PYG{n}{buf}\PYG{o}{.}\PYG{n}{retain}\PYG{o}{()}
          \PYG{n}{results}\PYG{o}{.}\PYG{n}{put}\PYG{o}{(}\PYG{k}{new} \PYG{n+nc}{SuccessFetchResult}\PYG{o}{(}\PYG{n+nc}{BlockId}\PYG{o}{(}\PYG{n}{blockId}\PYG{o}{),} \PYG{n}{address}\PYG{o}{,} \PYG{n}{sizeMap}\PYG{o}{(}\PYG{n}{blockId}\PYG{o}{),} \PYG{n}{buf}\PYG{o}{))}
          \PYG{n}{shuffleMetrics}\PYG{o}{.}\PYG{n}{incRemoteBytesRead}\PYG{o}{(}\PYG{n}{buf}\PYG{o}{.}\PYG{n}{size}\PYG{o}{)}
          \PYG{n}{shuffleMetrics}\PYG{o}{.}\PYG{n}{incRemoteBlocksFetched}\PYG{o}{(}\PYG{l+m+mi}{1}\PYG{o}{)}
        \PYG{o}{\PYGZcb{}}
      \PYG{o}{\PYGZcb{}}
      \PYG{k}{override} \PYG{k}{def} \PYG{n}{onBlockFetchFailure}\PYG{o}{(}\PYG{n}{blockId}\PYG{k}{:} \PYG{k+kt}{String}\PYG{o}{,} \PYG{n}{e}\PYG{k}{:} \PYG{k+kt}{Throwable}\PYG{o}{)}\PYG{k}{:} \PYG{k+kt}{Unit} \PYG{o}{=} \PYG{o}{\PYGZob{}}
        \PYG{n}{results}\PYG{o}{.}\PYG{n}{put}\PYG{o}{(}\PYG{k}{new} \PYG{n+nc}{FailureFetchResult}\PYG{o}{(}\PYG{n+nc}{BlockId}\PYG{o}{(}\PYG{n}{blockId}\PYG{o}{),} \PYG{n}{address}\PYG{o}{,} \PYG{n}{e}\PYG{o}{))}
      \PYG{o}{\PYGZcb{}}
   \PYG{o}{\PYGZcb{})}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
