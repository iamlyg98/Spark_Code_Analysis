\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{def} \PYG{n}{changeValue}\PYG{o}{(}\PYG{n}{key}\PYG{k}{:} \PYG{k+kt}{K}\PYG{o}{,} \PYG{n}{updateFunc}\PYG{k}{:} \PYG{o}{(}\PYG{k+kt}{Boolean}\PYG{o}{,} \PYG{k+kt}{V}\PYG{o}{)} \PYG{k}{=\PYGZgt{}} \PYG{n}{V}\PYG{o}{)}\PYG{k}{:} \PYG{k+kt}{V} \PYG{o}{=} \PYG{o}{\PYGZob{}}
  \PYG{n}{assert}\PYG{o}{(!}\PYG{n}{destroyed}\PYG{o}{,} \PYG{n}{destructionMessage}\PYG{o}{)}
  \PYG{k}{val} \PYG{n}{k} \PYG{k}{=} \PYG{n}{key}\PYG{o}{.}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{AnyRef}\PYG{o}{]}
  \PYG{c+c1}{//如果传入的key为空值，队列自动增加长度，}
  \PYG{c+c1}{// 这里的设计很巧妙：因为队列自动增加，就肯定会多出一个值，如果你不给它赋值的话，它就为null，}
  \PYG{c+c1}{// 但是这个值又不占队列中具体的位置，只要在最后的时候保留一个没有赋值的位置即可。}
  \PYG{k}{if} \PYG{o}{(}\PYG{n}{k}\PYG{o}{.}\PYG{n}{eq}\PYG{o}{(}\PYG{k+kc}{null}\PYG{o}{))} \PYG{o}{\PYGZob{}}
    \PYG{k}{if} \PYG{o}{(!}\PYG{n}{haveNullValue}\PYG{o}{)} \PYG{o}{\PYGZob{}}
      \PYG{n}{incrementSize}\PYG{o}{()}
    \PYG{o}{\PYGZcb{}}
    \PYG{n}{nullValue} \PYG{k}{=} \PYG{n}{updateFunc}\PYG{o}{(}\PYG{n}{haveNullValue}\PYG{o}{,} \PYG{n}{nullValue}\PYG{o}{)}
    \PYG{n}{haveNullValue} \PYG{k}{=} \PYG{k+kc}{true}
    \PYG{k}{return} \PYG{n}{nullValue}
  \PYG{o}{\PYGZcb{}}
  \PYG{k}{var} \PYG{n}{pos} \PYG{k}{=} \PYG{n}{rehash}\PYG{o}{(}\PYG{n}{k}\PYG{o}{.}\PYG{n}{hashCode}\PYG{o}{)} \PYG{o}{\PYGZam{}} \PYG{n}{mask}
  \PYG{k}{var} \PYG{n}{i} \PYG{k}{=} \PYG{l+m+mi}{1}
  \PYG{k}{while} \PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{)} \PYG{o}{\PYGZob{}}
    \PYG{c+c1}{//data是一个数组，用来同时存储key和value：key0, value0, key1, value1, key2, value2, etc.}
    \PYG{c+c1}{// 即2 * pos上存储的是key的值，2 * pos + 1上存储的是value的值}
    \PYG{k}{val} \PYG{n}{curKey} \PYG{k}{=} \PYG{n}{data}\PYG{o}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{pos}\PYG{o}{)}
    \PYG{k}{if} \PYG{o}{(}\PYG{n}{k}\PYG{o}{.}\PYG{n}{eq}\PYG{o}{(}\PYG{n}{curKey}\PYG{o}{)} \PYG{o}{||} \PYG{n}{k}\PYG{o}{.}\PYG{n}{equals}\PYG{o}{(}\PYG{n}{curKey}\PYG{o}{))} \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{//如果有相同的值的话，则根据updateFunc更新这个key对应的value}
      \PYG{k}{val} \PYG{n}{newValue} \PYG{k}{=} \PYG{n}{updateFunc}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{,} \PYG{n}{data}\PYG{o}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{pos} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{o}{).}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{V}\PYG{o}{])}
      \PYG{n}{data}\PYG{o}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{pos} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{k}{=} \PYG{n}{newValue}\PYG{o}{.}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{AnyRef}\PYG{o}{]}
      \PYG{k}{return} \PYG{n}{newValue}
    \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{curKey}\PYG{o}{.}\PYG{n}{eq}\PYG{o}{(}\PYG{k+kc}{null}\PYG{o}{))} \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{//如果key不存在就将该key和对应的value添加到data这个数组中}
      \PYG{k}{val} \PYG{n}{newValue} \PYG{k}{=} \PYG{n}{updateFunc}\PYG{o}{(}\PYG{k+kc}{false}\PYG{o}{,} \PYG{k+kc}{null}\PYG{o}{.}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{V}\PYG{o}{])}
      \PYG{n}{data}\PYG{o}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{pos}\PYG{o}{)} \PYG{k}{=} \PYG{n}{k}
      \PYG{n}{data}\PYG{o}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{pos} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{o}{)} \PYG{k}{=} \PYG{n}{newValue}\PYG{o}{.}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{AnyRef}\PYG{o}{]}
      \PYG{n}{incrementSize}\PYG{o}{()}
      \PYG{k}{return} \PYG{n}{newValue}
    \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{//如果pos和其它的key重合，则继续计算其位置}
      \PYG{k}{val} \PYG{n}{delta} \PYG{k}{=} \PYG{n}{i}
      \PYG{n}{pos} \PYG{k}{=} \PYG{o}{(}\PYG{n}{pos} \PYG{o}{+} \PYG{n}{delta}\PYG{o}{)} \PYG{o}{\PYGZam{}} \PYG{n}{mask}
      \PYG{n}{i} \PYG{o}{+=} \PYG{l+m+mi}{1}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}
  \PYG{k+kc}{null}\PYG{o}{.}\PYG{n}{asInstanceOf}\PYG{o}{[}\PYG{k+kt}{V}\PYG{o}{]} \PYG{c+c1}{// Never reached but needed to keep compiler happy}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
